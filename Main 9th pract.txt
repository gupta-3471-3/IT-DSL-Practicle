import java.util.Scanner;

class Customer { 
	private String customerName;  
	private int customerAge;   
	public void setCustomerName(String customerName){ 
		this.customerName=customerName; 
		}       
	
	public String getCustomerName(){     
		return customerName;   //returning value of customerName
		}        
	
	public void setCustomerAge(int customerAge){    
		this.customerAge=customerAge; //setting value of customerAge
		}       
	
	public int getCustomerAge(){       
		return customerAge;  //returning value of customerAge
		}
	
} 

abstract class Account { 
	protected double balance; 
	protected int accountId;  
	protected String accountType; 
	protected Customer custobj;  
	
	 void setBalance(double balance){    
		this.balance=balance;   //setting value of balance
		}        
	 
	 double getBalance(){  
		return balance;  //returning value of balance
		}        
	 
	 void setAccountId(int accountId){ 
		this.accountId=accountId;   //setting value of balance
		}       
	 
	 int getAccountId(){      
		return accountId; //returning value of accountId
		}       
	 
	 void setAccountType(String accountType){     
		this.accountType=accountType;  //setting value of balance 
		}   
	 
	 String getAccountType(){    
		return accountType;  //returning value of accountType
		}  
	 
	 void setCustomerObject(Customer custobj){     
		this.custobj=custobj; //setting value of balance
		}       
	 
	 Customer getCustomerObject(){    
		return custobj;    //returning value of custobj
		}
	 
	public abstract boolean withdraw(double amount); 
	
} 

class SavingsAccount extends Account{  

	 private double minimumBalance;       //declaration of minimumBalance
	 public void setMinimumBalance(double minimumBalance){ 
		 this.minimumBalance=minimumBalance;    //setting minimumBalance
		 }    
	 
	 public double getMinimumBalance(){      
		 return minimumBalance;  //returning minimumBalance
		 }  

	 public boolean withdraw(double amount){ 
	  
		 if((balance-amount)>minimumBalance){ 
			 //check whether withdraw amount is greater than minimumBalance        
			 balance-=amount;  //balance minus amount          
			 return true;       //returning true
			 }         
		 else        
			 return false; //returning false
		 }
	 }  


class Bank {     
	public static Scanner sc=new Scanner(System.in);  
	public SavingsAccount a=new SavingsAccount();     
	public Customer c=new Customer();          
	
	public SavingsAccount createAccount(){  
		sc.nextLine();     
		
		System.out.print("Enter your name: ");    
		String customername=sc.nextLine();    //enter customername as input from user
		c.setCustomerName(customername); 	//calling setCustomerName method
		
		System.out.print("Enter your age: ");     
		int customerage=sc.nextInt();          //enter customerage as input from user
		if(customerage<18){              //check whether the age is less than 18
			do{              
				System.out.print("Minimum age should be 18 to create an account.\nPlease enter valid age: ");      
				customerage=sc.nextInt();   
				}while(customerage<18); //if age is less than 18    
			}                  
		c.setCustomerAge(customerage); //calling setCustomerName method
		
		a.setCustomerObject(c);//calling setCustomerName method
		
		System.out.print("Enter your account Id: ");   
		int accountid=sc.nextInt(); 
		a.setAccountId(accountid); 
		
		System.out.print("Enter your account type: ");   
		String accounttype=sc.next();      
		a.setAccountType(accounttype); 
		
		System.out.print("Enter balance: ");         
		double balance=sc.nextDouble();
		a.setBalance(balance);
		
		System.out.print("Enter minimum balance: ");        
		double minbalance=sc.nextDouble(); 
		a.setMinimumBalance(minbalance); 
		
		              
		return a;                   
		} 
	
	
	 void getWithdrawAmount(){      
		System.out.print("Enter the amount you want to withdraw: ");           
		double amount=sc.nextDouble();           //taking amount as input from user 
		if(amount>20000){ //check whether amount is greater than 20000            
			System.out.println("Withdrawal failed. Maximum limit of withdrawal in one transaction is Rs.20000.");       
			}     
		else{  //if amount is less than 20000  
			if(a.withdraw(amount)==true){ //calling withdraw method     
				System.out.println("Withdrawal successful. Balance is: "+a.getBalance());  
				}             
			else              
				System.out.println("Sorry!!! Not enough balance"); //if not enough balance  
			}         
		}         
	 
	 public void depositAmount(double amount){ //method to deposit Amount        
		 double bal=a.getBalance()+amount;    //previous balance + amount         
		 a.setBalance(bal);  //call setBalance method         
		 System.out.println("Amount deposited successfully. Balance is: "+a.getBalance());  
		 }     
	 
	 public void checkBalance(){   //method to check Balance
			 System.out.println("Balance is: "+a.getBalance());//calling getbalance method     
			 }              
	 public void displayAccountInformation(){   //method to display Account Information
		 System.out.println("Welcome "+c.getCustomerName()+"! Following are your account details:");
		 //display name of customer
		 System.out.println("Age :"+c.getCustomerAge()); //display Age of customer      
		 System.out.println("Account Id: "+a.getAccountId());      //display Account Id of customer
		 System.out.println("Account Type: "+a.getAccountType()); //display Account Type of customer
		 System.out.println("Balance: "+a.getBalance());     //display Balance of customer   
		 System.out.println("Minimum balance: "+a.getMinimumBalance());  //display Minimum balance of customer   
		 } 
 }


 public class Main{
	 public static void main(String[] args){   
		 Scanner sc=new Scanner(System.in);   
		 SavingsAccount a; 
		 Bank bm=new Bank(); 
		
		 do{       
		     
			 System.out.println("\n\t1.Create Account\n\t2.Display Account\n\t3.Check Balance"
			 		+ "\n\t4.Deposit Amount\n\t5.Withdraw Amount\n\t6.Exit");               
			 System.out.print("Enter your choice: ");          
			 int choice=sc.nextInt();   //taking input from user            
			 System.out.println("");   
			 switch(choice)      
			 {             
			 case 1:
				 a=bm.createAccount();    //calling createAccount method
				 System.out.println("**************************************************");
				 break;                         
			 case 2:
				 bm.displayAccountInformation();  //calling displayAccountInformation method
				 System.out.println("**************************************************");
				 break;                            
			 case 3:
				 bm.checkBalance();   //calling checkBalance method    
				 System.out.println("**************************************************");
				 break;                                             
			 case 4:
				 System.out.print("Enter the amount you want to deposit: ");  
				 double amount=sc.nextDouble();                      
				 bm.depositAmount(amount);       //calling depositAmount method 
				 System.out.println("**************************************************");
				 break;                                               
			 case 5:
				 bm.getWithdrawAmount();          //calling getWithdrawAmount method 
				 System.out.println("**************************************************");
				 break;
			 case 6:
				 System.out.println("**************************************************");
				 return ; //stop execution of program
			 default:
				 System.out.println("INVALID INPUT !!");//printing invalid input
				 System.out.println("**************************************************");
				 break;                                       
			 }   
			      
			 }while(true);     
		 }
 }